/**
 * @fileoverview Externs generated by dts2as from NextGenActionScript.com
 * @externs
 * @suppress {duplicate}
 */

/**
 * @type {Object}
 */
angular.material = {};

/**
 * @interface
 */
angular.material.MDBottomSheetOptions = function() {};
/**
 * @type {string}
 */
angular.material.MDBottomSheetOptions.prototype.templateUrl;

/**
 * @type {string}
 */
angular.material.MDBottomSheetOptions.prototype.template;

/**
 * @type {angular.IScope}
 */
angular.material.MDBottomSheetOptions.prototype.scope;

/**
 * @type {boolean}
 */
angular.material.MDBottomSheetOptions.prototype.preserveScope;

/**
 * @type {Object}
 */
angular.material.MDBottomSheetOptions.prototype.controller;

/**
 * @type {Object}
 */
angular.material.MDBottomSheetOptions.prototype.locals;

/**
 * @type {MouseEvent}
 */
angular.material.MDBottomSheetOptions.prototype.targetEvent;

/**
 * @type {Object}
 */
angular.material.MDBottomSheetOptions.prototype.resolve;

/**
 * @type {string}
 */
angular.material.MDBottomSheetOptions.prototype.controllerAs;

/**
 * @type {Object}
 */
angular.material.MDBottomSheetOptions.prototype.parent;

/**
 * @type {boolean}
 */
angular.material.MDBottomSheetOptions.prototype.disableParentScroll;

/**
 * @interface
 */
angular.material.MDBottomSheetService = function() {};
/**
 * @param {Object} options
 * @return {angular.IPromise}
 */
angular.material.MDBottomSheetService.prototype.show = function(options) {};

/**
 * @param {Object=} response
 */
angular.material.MDBottomSheetService.prototype.hide = function(response) {};

/**
 * @param {Object=} response
 */
angular.material.MDBottomSheetService.prototype.cancel = function(response) {};

/**
 * @interface
 */
angular.material.MDPresetDialog = function() {};
/**
 * @param {string} title
 * @return {Object}
 */
angular.material.MDPresetDialog.prototype.title = function(title) {};

/**
 * @param {string} content
 * @return {Object}
 */
angular.material.MDPresetDialog.prototype.content = function(content) {};

/**
 * @param {string} ok
 * @return {Object}
 */
angular.material.MDPresetDialog.prototype.ok = function(ok) {};

/**
 * @param {string} theme
 * @return {Object}
 */
angular.material.MDPresetDialog.prototype.theme = function(theme) {};

/**
 * @interface
 * @extends {angular.material.MDPresetDialog}
 */
angular.material.MDAlertDialog = function() {};
/**
 * @interface
 * @extends {angular.material.MDPresetDialog}
 */
angular.material.MDConfirmDialog = function() {};
/**
 * @param {string} cancel
 * @return {angular.material.MDConfirmDialog}
 */
angular.material.MDConfirmDialog.prototype.cancel = function(cancel) {};

/**
 * @interface
 */
angular.material.MDDialogOptions = function() {};
/**
 * @type {string}
 */
angular.material.MDDialogOptions.prototype.templateUrl;

/**
 * @type {string}
 */
angular.material.MDDialogOptions.prototype.template;

/**
 * @type {MouseEvent}
 */
angular.material.MDDialogOptions.prototype.targetEvent;

/**
 * @type {angular.IScope}
 */
angular.material.MDDialogOptions.prototype.scope;

/**
 * @type {boolean}
 */
angular.material.MDDialogOptions.prototype.preserveScope;

/**
 * @type {boolean}
 */
angular.material.MDDialogOptions.prototype.disableParentScroll;

/**
 * @type {boolean}
 */
angular.material.MDDialogOptions.prototype.hasBackdrop;

/**
 * @type {boolean}
 */
angular.material.MDDialogOptions.prototype.clickOutsideToClose;

/**
 * @type {boolean}
 */
angular.material.MDDialogOptions.prototype.escapeToClose;

/**
 * @type {boolean}
 */
angular.material.MDDialogOptions.prototype.focusOnOpen;

/**
 * @type {Object}
 */
angular.material.MDDialogOptions.prototype.controller;

/**
 * @type {Object}
 */
angular.material.MDDialogOptions.prototype.locals;

/**
 * @type {boolean}
 */
angular.material.MDDialogOptions.prototype.bindToController;

/**
 * @type {Object}
 */
angular.material.MDDialogOptions.prototype.resolve;

/**
 * @type {string}
 */
angular.material.MDDialogOptions.prototype.controllerAs;

/**
 * @type {Object}
 */
angular.material.MDDialogOptions.prototype.parent;

/**
 * @type {Function}
 */
angular.material.MDDialogOptions.prototype.onComplete;

/**
 * @interface
 */
angular.material.MDDialogService = function() {};
/**
 * @param {Object} dialog
 * @return {angular.IPromise}
 */
angular.material.MDDialogService.prototype.show = function(dialog) {};

/**
 * @return {angular.material.MDConfirmDialog}
 */
angular.material.MDDialogService.prototype.confirm = function() {};

/**
 * @return {angular.material.MDAlertDialog}
 */
angular.material.MDDialogService.prototype.alert = function() {};

/**
 * @param {Object=} response
 * @return {angular.IPromise}
 */
angular.material.MDDialogService.prototype.hide = function(response) {};

/**
 * @param {Object=} response
 */
angular.material.MDDialogService.prototype.cancel = function(response) {};

/**
 * @interface
 */
angular.material.MDIconProvider = function() {};
/**
 * @param {string} id
 * @param {string} url
 * @param {string=} iconSize
 * @return {angular.material.MDIconProvider}
 */
angular.material.MDIconProvider.prototype.icon = function(id, url, iconSize) {};

/**
 * @param {string} id
 * @param {string} url
 * @param {string=} iconSize
 * @return {angular.material.MDIconProvider}
 */
angular.material.MDIconProvider.prototype.iconSet = function(id, url, iconSize) {};

/**
 * @param {string} url
 * @param {string=} iconSize
 * @return {angular.material.MDIconProvider}
 */
angular.material.MDIconProvider.prototype.defaultIconSet = function(url, iconSize) {};

/**
 * @param {string} iconSize
 * @return {angular.material.MDIconProvider}
 */
angular.material.MDIconProvider.prototype.defaultIconSize = function(iconSize) {};

/**
 * @interface
 */
angular.material.MDSidenavObject = function() {};
/**
 * @return {angular.IPromise}
 */
angular.material.MDSidenavObject.prototype.toggle = function() {};

/**
 * @return {angular.IPromise}
 */
angular.material.MDSidenavObject.prototype.open = function() {};

/**
 * @return {angular.IPromise}
 */
angular.material.MDSidenavObject.prototype.close = function() {};

/**
 * @return {boolean}
 */
angular.material.MDSidenavObject.prototype.isOpen = function() {};

/**
 * @return {boolean}
 */
angular.material.MDSidenavObject.prototype.isLockedOpen = function() {};

/**
 * @interface
 */
angular.material.MDToastPreset = function() {};
/**
 * @param {string} content
 * @return {Object}
 */
angular.material.MDToastPreset.prototype.content = function(content) {};

/**
 * @param {string} action
 * @return {Object}
 */
angular.material.MDToastPreset.prototype.action = function(action) {};

/**
 * @param {boolean} highlightAction
 * @return {Object}
 */
angular.material.MDToastPreset.prototype.highlightAction = function(highlightAction) {};

/**
 * @param {boolean} capsule
 * @return {Object}
 */
angular.material.MDToastPreset.prototype.capsule = function(capsule) {};

/**
 * @param {string} theme
 * @return {Object}
 */
angular.material.MDToastPreset.prototype.theme = function(theme) {};

/**
 * @param {number} delay
 * @return {Object}
 */
angular.material.MDToastPreset.prototype.hideDelay = function(delay) {};

/**
 * @param {string} position
 * @return {Object}
 */
angular.material.MDToastPreset.prototype.position = function(position) {};

/**
 * @interface
 * @extends {angular.material.MDToastPreset}
 */
angular.material.MDSimpleToastPreset = function() {};
/**
 * @interface
 */
angular.material.MDToastOptions = function() {};
/**
 * @type {string}
 */
angular.material.MDToastOptions.prototype.templateUrl;

/**
 * @type {string}
 */
angular.material.MDToastOptions.prototype.template;

/**
 * @type {angular.IScope}
 */
angular.material.MDToastOptions.prototype.scope;

/**
 * @type {boolean}
 */
angular.material.MDToastOptions.prototype.preserveScope;

/**
 * @type {number}
 */
angular.material.MDToastOptions.prototype.hideDelay;

/**
 * @type {string}
 */
angular.material.MDToastOptions.prototype.position;

/**
 * @type {Object}
 */
angular.material.MDToastOptions.prototype.controller;

/**
 * @type {Object}
 */
angular.material.MDToastOptions.prototype.locals;

/**
 * @type {boolean}
 */
angular.material.MDToastOptions.prototype.bindToController;

/**
 * @type {Object}
 */
angular.material.MDToastOptions.prototype.resolve;

/**
 * @type {string}
 */
angular.material.MDToastOptions.prototype.controllerAs;

/**
 * @type {Object}
 */
angular.material.MDToastOptions.prototype.parent;

/**
 * @interface
 */
angular.material.MDToastService = function() {};
/**
 * @param {Object} optionsOrPreset
 * @return {angular.IPromise}
 */
angular.material.MDToastService.prototype.show = function(optionsOrPreset) {};

/**
 * @return {angular.IPromise}
 */
angular.material.MDToastService.prototype.showSimple = function() {};

/**
 * @return {angular.material.MDSimpleToastPreset}
 */
angular.material.MDToastService.prototype.simple = function() {};

/**
 * @return {angular.material.MDToastPreset}
 */
angular.material.MDToastService.prototype.build = function() {};

/**
 */
angular.material.MDToastService.prototype.updateContent = function() {};

/**
 * @param {Object=} response
 */
angular.material.MDToastService.prototype.hide = function(response) {};

/**
 * @param {Object=} response
 */
angular.material.MDToastService.prototype.cancel = function(response) {};

/**
 * @interface
 */
angular.material.MDPalette = function() {};
/**
 * @type {string}
 */
angular.material.MDPalette.prototype.A100;

/**
 * @type {string}
 */
angular.material.MDPalette.prototype.A200;

/**
 * @type {string}
 */
angular.material.MDPalette.prototype.A400;

/**
 * @type {string}
 */
angular.material.MDPalette.prototype.A700;

/**
 * @type {string}
 */
angular.material.MDPalette.prototype.contrastDefaultColor;

/**
 * @type {Object}
 */
angular.material.MDPalette.prototype.contrastDarkColors;

/**
 * @type {Object}
 */
angular.material.MDPalette.prototype.contrastLightColors;

/**
 * @interface
 */
angular.material.MDThemeHues = function() {};
/**
 * @type {string}
 */
angular.material.MDThemeHues.prototype.default;

/**
 * @interface
 */
angular.material.MDThemePalette = function() {};
/**
 * @type {string}
 */
angular.material.MDThemePalette.prototype.name;

/**
 * @type {angular.material.MDThemeHues}
 */
angular.material.MDThemePalette.prototype.hues;

/**
 * @interface
 */
angular.material.MDThemeColors = function() {};
/**
 * @type {angular.material.MDThemePalette}
 */
angular.material.MDThemeColors.prototype.accent;

/**
 * @type {angular.material.MDThemePalette}
 */
angular.material.MDThemeColors.prototype.background;

/**
 * @type {angular.material.MDThemePalette}
 */
angular.material.MDThemeColors.prototype.primary;

/**
 * @type {angular.material.MDThemePalette}
 */
angular.material.MDThemeColors.prototype.warn;

/**
 * @interface
 */
angular.material.MDThemeGrayScalePalette = function() {};
/**
 * @type {string}
 */
angular.material.MDThemeGrayScalePalette.prototype.name;

/**
 * @interface
 */
angular.material.MDTheme = function() {};
/**
 * @type {string}
 */
angular.material.MDTheme.prototype.name;

/**
 * @type {boolean}
 */
angular.material.MDTheme.prototype.isDark;

/**
 * @type {angular.material.MDThemeColors}
 */
angular.material.MDTheme.prototype.colors;

/**
 * @type {angular.material.MDThemeGrayScalePalette}
 */
angular.material.MDTheme.prototype.foregroundPalette;

/**
 * @type {string}
 */
angular.material.MDTheme.prototype.foregroundShadow;

/**
 * @param {string} name
 * @param {Object=} hues
 * @return {angular.material.MDTheme}
 */
angular.material.MDTheme.prototype.accentPalette = function(name, hues) {};

/**
 * @param {string} name
 * @param {Object=} hues
 * @return {angular.material.MDTheme}
 */
angular.material.MDTheme.prototype.primaryPalette = function(name, hues) {};

/**
 * @param {string} name
 * @param {Object=} hues
 * @return {angular.material.MDTheme}
 */
angular.material.MDTheme.prototype.warnPalette = function(name, hues) {};

/**
 * @param {string} name
 * @param {Object=} hues
 * @return {angular.material.MDTheme}
 */
angular.material.MDTheme.prototype.backgroundPalette = function(name, hues) {};

/**
 * @param {boolean=} isDark
 * @return {angular.material.MDTheme}
 */
angular.material.MDTheme.prototype.dark = function(isDark) {};

/**
 * @interface
 */
angular.material.MDThemingProvider = function() {};
/**
 * @param {string} name
 * @param {string=} inheritFrom
 * @return {angular.material.MDTheme}
 */
angular.material.MDThemingProvider.prototype.theme = function(name, inheritFrom) {};

/**
 * @param {string} name
 * @param {Object} palette
 * @return {angular.material.MDThemingProvider}
 */
angular.material.MDThemingProvider.prototype.definePalette = function(name, palette) {};

/**
 * @param {string} name
 * @param {Object} palette
 * @return {angular.material.MDPalette}
 */
angular.material.MDThemingProvider.prototype.extendPalette = function(name, palette) {};

/**
 * @param {string} theme
 */
angular.material.MDThemingProvider.prototype.setDefaultTheme = function(theme) {};

/**
 * @param {boolean} alwaysWatch
 */
angular.material.MDThemingProvider.prototype.alwaysWatchTheme = function(alwaysWatch) {};

