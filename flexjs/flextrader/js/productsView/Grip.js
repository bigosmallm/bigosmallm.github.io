/**
 * Generated by Apache Flex Cross-Compiler from productsView\Grip.mxml
 * productsView.Grip
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes}
 */

goog.provide('productsView.Grip');

goog.require('org.apache.flex.html.Container');
goog.require('org.apache.flex.html.beads.layouts.OneFlexibleChildVerticalLayout');
goog.require('org.apache.flex.html.accessories.ToolTipBead');




/**
 * @constructor
 * @extends {org.apache.flex.html.Container}
 */
productsView.Grip = function() {
  productsView.Grip.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.binding.ContainerDataBinding}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.beads.layouts.OneFlexibleChildVerticalLayout}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Image}
   */
  this.icon_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Image}
   */
  this.grip_;
  
  /**
   * @private
   * @type {org.apache.flex.html.accessories.ToolTipBead}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([4,
'width',
true,
17,
'percentHeight',
true,
100.0,
'style',
false,
[org.apache.flex.core.SimpleCSSStyles, 2, '_id', true, '$ID0', 'paddingTop', true, 10, 0, 0, null],
'beads',
null, [org.apache.flex.binding.ContainerDataBinding, 1, '_id', true, '$ID1', 0, 0, null, org.apache.flex.html.beads.layouts.OneFlexibleChildVerticalLayout, 2, '_id', true, '$ID2', 'flexibleChild', true, 'grip', 0, 0, null],
0,
0
  ]);
  
};
goog.inherits(productsView.Grip, org.apache.flex.html.Container);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
productsView.Grip.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'Grip', qName: 'productsView.Grip' }] };


/**
 * @export
 * @type {string}
 */
productsView.Grip.prototype.gripTip_;


/**
 * @export
 * @type {string}
 */
productsView.Grip.prototype.gripIcon_;


Object.defineProperties(productsView.Grip.prototype, /** @lends {productsView.Grip.prototype} */ {
/** @export */
gripTip: {
/** @this {productsView.Grip} */
  get: function() {
  return this.gripTip_;
  },

/** @this {productsView.Grip} */
set: function(value) {
if (value != this.gripTip_) {
    var oldValue = this.gripTip_;
    this.gripTip_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "gripTip", oldValue, value));
}
}},/** @export */
gripIcon: {
/** @this {productsView.Grip} */
  get: function() {
  return this.gripIcon_;
  },

/** @this {productsView.Grip} */
set: function(value) {
if (value != this.gripIcon_) {
    var oldValue = this.gripIcon_;
    this.gripIcon_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "gripIcon", oldValue, value));
}
}}}
);Object.defineProperties(productsView.Grip.prototype, /** @lends {productsView.Grip.prototype} */ {
/** @export */
    icon: {
    /** @this {productsView.Grip} */
    get: function() {
      return this.icon_;
    },
    /** @this {productsView.Grip} */
    set: function(value) {
      if (value != this.icon_) {
        this.icon_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'icon', null, value));
      }
    }
  },
  /** @export */
    grip: {
    /** @this {productsView.Grip} */
    get: function() {
      return this.grip_;
    },
    /** @this {productsView.Grip} */
    set: function(value) {
      if (value != this.grip_) {
        this.grip_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'grip', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {productsView.Grip} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = org.apache.flex.utils.Language.superGetter(productsView.Grip,this, 'MXMLDescriptor');
          /** @type {Array} */
          var data = [
      org.apache.flex.html.Image,
1,
'id',
true,
'icon',
0,
0,
null,
org.apache.flex.html.Image,
3,
'id',
true,
'grip',
'source',
true,
'assets/grip.png',
'beads',
null, [org.apache.flex.html.accessories.ToolTipBead, 1, '_id', true, '$ID3', 0, 0, null],
0,
0,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * @export
   */
  productsView.Grip.prototype._bindings = [
  2,
  "gripIcon",
  null,
  ["icon", "source"],
  "gripTip",
  null,
  ["$ID3", "toolTip"],
  0,
  2,
  "gripIcon",
  "valueChange",
  0,
  null,
  null,
  1,
  2,
  "gripTip",
  "valueChange",
  1,
  null,
  null,
  null];
  
