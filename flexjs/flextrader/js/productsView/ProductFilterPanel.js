/**
 * Generated by Apache Flex Cross-Compiler from productsView\ProductFilterPanel.mxml
 * productsView.ProductFilterPanel
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes}
 */

goog.provide('productsView.ProductFilterPanel');

goog.require('org.apache.flex.html.VContainer');
goog.require('samples.flexstore.ProductFilter');
goog.require('org.apache.flex.html.accessories.CurrencyFormatter');
goog.require('org.apache.flex.html.DropDownList');
goog.require('org.apache.flex.html.NumericStepper');
goog.require('productsView.ProductList');
goog.require('org.apache.flex.html.ImageAndTextButton');
goog.require('samples.flexstore.ProductFilterEvent');
goog.require('samples.flexstore.ProductListEvent');
goog.require('productsView.ProductListItem');




/**
 * @constructor
 * @extends {org.apache.flex.html.VContainer}
 */
productsView.ProductFilterPanel = function() {
  productsView.ProductFilterPanel.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {samples.flexstore.ProductFilter}
   */
  this.filter_;
  
  /**
   * @private
   * @type {org.apache.flex.html.accessories.CurrencyFormatter}
   */
  this.cf_;
  
  /**
   * @private
   * @type {org.apache.flex.binding.ContainerDataBinding}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Container}
   */
  this.$ID6_;
  
  /**
   * @private
   * @type {org.apache.flex.html.beads.layouts.FlexibleFirstChildHorizontalLayout}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {org.apache.flex.html.TextInput}
   */
  this.$ID4_;
  
  /**
   * @private
   * @type {org.apache.flex.html.TextButton}
   */
  this.$ID5_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID7_;
  
  /**
   * @private
   * @type {org.apache.flex.html.HRule}
   */
  this.$ID8_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID9_;
  
  /**
   * @private
   * @type {org.apache.flex.html.HContainer}
   */
  this.$ID14_;
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID10_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID11_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID13_;
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID12_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID15_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID16_;
  
  /**
   * @private
   * @type {org.apache.flex.html.DropDownList}
   */
  this.series_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID27_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID28_;
  
  /**
   * @private
   * @type {org.apache.flex.html.HContainer}
   */
  this.nsholder_;
  
  /**
   * @private
   * @type {org.apache.flex.html.NumericStepper}
   */
  this.loPrice_;
  
  /**
   * @private
   * @type {org.apache.flex.html.NumericStepper}
   */
  this.hiPrice_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID29_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID30_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID31_;
  
  /**
   * @private
   * @type {org.apache.flex.html.CheckBox}
   */
  this.cbBlazeDS_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID32_;
  
  /**
   * @private
   * @type {org.apache.flex.html.CheckBox}
   */
  this.cbMobile_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID33_;
  
  /**
   * @private
   * @type {org.apache.flex.html.CheckBox}
   */
  this.cbVideo_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID34_;
  
  /**
   * @private
   * @type {org.apache.flex.html.HRule}
   */
  this.$ID35_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID36_;
  
  /**
   * @private
   * @type {org.apache.flex.html.HContainer}
   */
  this.$ID39_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID37_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID38_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID40_;
  
  /**
   * @private
   * @type {productsView.ProductList}
   */
  this.productList_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID41_;
  
  /**
   * @private
   * @type {org.apache.flex.html.ImageAndTextButton}
   */
  this.compareButton_;
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID42_;
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID43_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([5,
'percentHeight',
true,
100.0,
'currentState',
true,
'showingThumbnails',
'style',
false,
[org.apache.flex.core.SimpleCSSStyles, 5, '_id', true, '$ID0', 'paddingLeft', true, 4, 'paddingRight', true, 12, 'paddingTop', true, 12, 'paddingBottom', true, 8, 0, 0, null],
'states',
null, [org.apache.flex.states.State, 3, '_id', true, '$ID42', 'name', true, 'showingThumbnails', 'overrides', null, [org.apache.flex.states.SetEventHandler, 3, 'target', true, 'compareButton', 'name', true, 'click', 'handlerFunction', true, org.apache.flex.utils.Language.closure(this.$EH9, this, '$EH9'), 0, 0, null, org.apache.flex.states.SetProperty, 3, 'target', true, 'compareButton', 'name', true, 'text', 'value', true, 'Compare Items', 0, 0, null, org.apache.flex.states.SetProperty, 3, 'target', true, 'compareButton', 'name', true, 'image', 'value', true, 'assets/icon_compare.png', 0, 0, null], 0, 0, null, org.apache.flex.states.State, 3, '_id', true, '$ID43', 'name', true, 'showingComparison', 'overrides', null, [org.apache.flex.states.SetEventHandler, 3, 'target', true, 'compareButton', 'name', true, 'click', 'handlerFunction', true, org.apache.flex.utils.Language.closure(this.$EH10, this, '$EH10'), 0, 0, null, org.apache.flex.states.SetProperty, 3, 'target', true, 'compareButton', 'name', true, 'text', 'value', true, 'Back to thumbnail view', 0, 0, null, org.apache.flex.states.SetProperty, 3, 'target', true, 'compareButton', 'name', true, 'image', 'value', true, 'assets/icon_tiles.png', 0, 0, null], 0, 0, null],
'beads',
null, [org.apache.flex.binding.ContainerDataBinding, 1, '_id', true, '$ID1', 0, 0, null],
0,
1,
'initComplete',
this.$EH0
  ]);
  
};
goog.inherits(productsView.ProductFilterPanel, org.apache.flex.html.VContainer);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
productsView.ProductFilterPanel.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ProductFilterPanel', qName: 'productsView.ProductFilterPanel' }] };


/**
 * @private
 * @type {boolean}
 */
productsView.ProductFilterPanel.prototype.thumbBeingPressed;


/**
 * @private
 */
productsView.ProductFilterPanel.prototype.dispatchFilter = function() {
  var /** @type {samples.flexstore.ProductFilterEvent} */ event = new samples.flexstore.ProductFilterEvent(this.filter, this.thumbBeingPressed);
  this.dispatchEvent(event);
  this.currentState = "showingThumbnails";
};


/**
 * @private
 * @param {Array} values
 * @param {number} index
 * @return {number}
 */
productsView.ProductFilterPanel.prototype.sliderValue = function(values, index) {
  return values[index];
};


/**
 * @private
 */
productsView.ProductFilterPanel.prototype.productRemoved = function() {
  if (this.currentState == "showingComparison") {
    if (this.productList.items.length == 0) {
      this.dispatchFilter();
    } else {
      this.attemptCompare();
    }
  }
};


/**
 * @private
 */
productsView.ProductFilterPanel.prototype.attemptCompare = function() {
  if (this.productList.items.length > 0) {
    this.dispatchEvent(new org.apache.flex.events.Event("compare"));
    this.currentState = "showingComparison";
  } else {
    org.apache.flex.html.SimpleAlert.show("There are no items to compare.", "Compare");
  }
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductFilterPanel.prototype.$EH0 = function(event)
{
  this.series.selectedIndex = 0;
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductFilterPanel.prototype.$EH1 = function(event)
{
  org.apache.flex.html.SimpleAlert.show('This feature is not implemented in this sample', 'Find');
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductFilterPanel.prototype.$EH2 = function(event)
{
  this.dispatchFilter();
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductFilterPanel.prototype.$EH3 = function(event)
{
  this.dispatchFilter();
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductFilterPanel.prototype.$EH4 = function(event)
{
  this.dispatchFilter();
};


/**
 * @export
 * @param {org.apache.flex.events.MouseEvent} event
 */
productsView.ProductFilterPanel.prototype.$EH5 = function(event)
{
  this.dispatchFilter();
};


/**
 * @export
 * @param {org.apache.flex.events.MouseEvent} event
 */
productsView.ProductFilterPanel.prototype.$EH6 = function(event)
{
  this.dispatchFilter();
};


/**
 * @export
 * @param {org.apache.flex.events.MouseEvent} event
 */
productsView.ProductFilterPanel.prototype.$EH7 = function(event)
{
  this.dispatchFilter();
};


/**
 * @export
 * @param {samples.flexstore.ProductListEvent} event
 */
productsView.ProductFilterPanel.prototype.$EH8 = function(event)
{
  this.productRemoved();
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductFilterPanel.prototype.$EH9 = function(event)
{
  this.attemptCompare();
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductFilterPanel.prototype.$EH10 = function(event)
{
  this.dispatchFilter();
};


Object.defineProperties(productsView.ProductFilterPanel.prototype, /** @lends {productsView.ProductFilterPanel.prototype} */ {
/** @export */
    filter: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.filter_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.filter_) {
        this.filter_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'filter', null, value));
      }
    }
  },
  /** @export */
    cf: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.cf_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.cf_) {
        this.cf_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'cf', null, value));
      }
    }
  },
  /** @export */
    series: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.series_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.series_) {
        this.series_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'series', null, value));
      }
    }
  },
  /** @export */
    nsholder: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.nsholder_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.nsholder_) {
        this.nsholder_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'nsholder', null, value));
      }
    }
  },
  /** @export */
    loPrice: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.loPrice_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.loPrice_) {
        this.loPrice_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'loPrice', null, value));
      }
    }
  },
  /** @export */
    hiPrice: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.hiPrice_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.hiPrice_) {
        this.hiPrice_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'hiPrice', null, value));
      }
    }
  },
  /** @export */
    cbBlazeDS: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.cbBlazeDS_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.cbBlazeDS_) {
        this.cbBlazeDS_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'cbBlazeDS', null, value));
      }
    }
  },
  /** @export */
    cbMobile: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.cbMobile_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.cbMobile_) {
        this.cbMobile_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'cbMobile', null, value));
      }
    }
  },
  /** @export */
    cbVideo: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.cbVideo_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.cbVideo_) {
        this.cbVideo_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'cbVideo', null, value));
      }
    }
  },
  /** @export */
    productList: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.productList_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.productList_) {
        this.productList_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'productList', null, value));
      }
    }
  },
  /** @export */
    compareButton: {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      return this.compareButton_;
    },
    /** @this {productsView.ProductFilterPanel} */
    set: function(value) {
      if (value != this.compareButton_) {
        this.compareButton_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'compareButton', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {productsView.ProductFilterPanel} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = org.apache.flex.utils.Language.superGetter(productsView.ProductFilterPanel,this, 'MXMLDescriptor');
          /** @type {Array} */
          var data = [
      samples.flexstore.ProductFilter,
1,
'id',
true,
'filter',
0,
0,
null,
org.apache.flex.html.accessories.CurrencyFormatter,
2,
'id',
true,
'cf',
'currencySymbol',
true,
'$',
0,
0,
null,
org.apache.flex.html.Label,
3,
'_id',
true,
'$ID2',
'text',
true,
'Find',
'className',
true,
'sectionHeader',
0,
0,
null,
org.apache.flex.html.Container,
3,
'_id',
true,
'$ID6',
'percentWidth',
true,
100.0,
'beads',
null, [org.apache.flex.html.beads.layouts.FlexibleFirstChildHorizontalLayout, 1, '_id', true, '$ID3', 0, 0, null],
0,
0,
[org.apache.flex.html.TextInput, 3, '_id', true, '$ID4', 'className', true, 'glass', 'percentWidth', true, 100.0, 0, 0, null, org.apache.flex.html.TextButton, 3, '_id', true, '$ID5', 'className', true, 'glass', 'text', true, 'Go', 0, 1, 'click', this.$EH1, null],
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID7',
'height',
true,
18,
0,
0,
null,
org.apache.flex.html.HRule,
2,
'_id',
true,
'$ID8',
'percentWidth',
true,
100.0,
0,
0,
null,
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID9',
'height',
true,
8,
0,
0,
null,
org.apache.flex.html.HContainer,
2,
'_id',
true,
'$ID14',
'style',
false,
[org.apache.flex.core.SimpleCSSStyles, 4, '_id', true, '$ID10', 'paddingTop', true, 0, 'paddingLeft', true, 0, 'verticalAlign', true, 'bottom', 0, 0, null],
0,
0,
[org.apache.flex.html.Label, 3, '_id', true, '$ID11', 'text', true, 'Filter', 'className', true, 'sectionHeader', 0, 0, null, org.apache.flex.html.Label, 2, '_id', true, '$ID13', 'style', false, [org.apache.flex.core.SimpleCSSStyles, 2, '_id', true, '$ID12', 'fontWeight', true, 'bold', 0, 0, null], 0, 0, null],
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID15',
'height',
true,
8,
0,
0,
null,
org.apache.flex.html.Label,
2,
'_id',
true,
'$ID16',
'text',
true,
'Years of Experience',
0,
0,
null,
org.apache.flex.html.DropDownList,
4,
'id',
true,
'series',
'className',
true,
'glass',
'width',
true,
140,
'dataProvider',
true,
['All','3','5','7','9'],
0,
1,
'change',
this.$EH2,
null,
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID27',
'height',
true,
18,
0,
0,
null,
org.apache.flex.html.Label,
2,
'_id',
true,
'$ID28',
'text',
true,
'Price',
0,
0,
null,
org.apache.flex.html.HContainer,
2,
'id',
true,
'nsholder',
'percentWidth',
true,
100.0,
0,
0,
[org.apache.flex.html.NumericStepper, 4, 'id', true, 'loPrice', 'percentWidth', true, 48.0, 'minimum', true, 0, 'value', true, 0, 0, 1, 'valueChange', this.$EH3, null, org.apache.flex.html.NumericStepper, 4, 'id', true, 'hiPrice', 'percentWidth', true, 48.0, 'maximum', true, 200, 'value', true, 200, 0, 1, 'valueChange', this.$EH4, null],
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID29',
'height',
true,
18,
0,
0,
null,
org.apache.flex.html.Label,
2,
'_id',
true,
'$ID30',
'text',
true,
'Required Features',
0,
0,
null,
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID31',
'height',
true,
4,
0,
0,
null,
org.apache.flex.html.CheckBox,
3,
'id',
true,
'cbBlazeDS',
'className',
true,
'glass',
'text',
true,
'BlazeDS',
0,
1,
'click',
this.$EH5,
null,
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID32',
'height',
true,
4,
0,
0,
null,
org.apache.flex.html.CheckBox,
3,
'id',
true,
'cbMobile',
'className',
true,
'glass',
'text',
true,
'Mobile',
0,
1,
'click',
this.$EH6,
null,
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID33',
'height',
true,
4,
0,
0,
null,
org.apache.flex.html.CheckBox,
3,
'id',
true,
'cbVideo',
'className',
true,
'glass',
'text',
true,
'Video',
0,
1,
'click',
this.$EH7,
null,
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID34',
'height',
true,
18,
0,
0,
null,
org.apache.flex.html.HRule,
2,
'_id',
true,
'$ID35',
'percentWidth',
true,
100.0,
0,
0,
null,
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID36',
'height',
true,
8,
0,
0,
null,
org.apache.flex.html.HContainer,
1,
'_id',
true,
'$ID39',
0,
0,
[org.apache.flex.html.Label, 3, '_id', true, '$ID37', 'text', true, 'Compare', 'className', true, 'sectionHeader', 0, 0, null, org.apache.flex.html.Label, 3, '_id', true, '$ID38', 'text', true, '(Drag items here to compare)', 'className', true, 'instructions', 0, 0, null],
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID40',
'height',
true,
4,
0,
0,
null,
productsView.ProductList,
5,
'id',
true,
'productList',
'percentWidth',
true,
100.0,
'newItemStartX',
true,
300,
'newItemStartY',
true,
-100,
'maxItems',
true,
4,
0,
1,
'removeProduct',
this.$EH8,
null,
org.apache.flex.html.Spacer,
2,
'_id',
true,
'$ID41',
'height',
true,
8,
0,
0,
null,
org.apache.flex.html.ImageAndTextButton,
2,
'id',
true,
'compareButton',
'className',
true,
'glass',
0,
0,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * @export
   */
  productsView.ProductFilterPanel.prototype._bindings = [
  10,
  ["series", "selectedItem"],
  null,
  ["filter", "experience"],
  ["loPrice", "value"],
  null,
  ["filter", "minPrice"],
  ["hiPrice", "value"],
  null,
  ["filter", "maxPrice"],
  ["cbBlazeDS", "selected"],
  null,
  ["filter", "blazeds"],
  ["cbMobile", "selected"],
  null,
  ["filter", "mobile"],
  ["cbVideo", "selected"],
  null,
  ["filter", "video"],
  function() { return "(" + this.filter.count + " items selected)"; },
  null,
  ["$ID13", "text"],
  ["hiPrice", "value"],
  null,
  ["loPrice", "maximum"],
  ["loPrice", "value"],
  null,
  ["hiPrice", "minimum"],
  function() { return this.productList.maxItems * productsView.ProductListItem.HEIGHT + 2; },
  null,
  ["productList", "height"],
  0,
  2,
  "series",
  "valueChange",
  0,
  null,
  [
  1,
  2,
  "selectedItem",
  "change",
  0,
  null,
  null,
  null],
  2,
  2,
  "loPrice",
  "valueChange",
  [1,8],
  null,
  [
  3,
  2,
  "value",
  "valueChange",
  [1,8],
  null,
  null,
  null],
  4,
  2,
  "hiPrice",
  "valueChange",
  [2,7],
  null,
  [
  5,
  2,
  "value",
  "valueChange",
  [2,7],
  null,
  null,
  null],
  6,
  2,
  "cbBlazeDS",
  "valueChange",
  3,
  null,
  [
  7,
  2,
  "selected",
  "change",
  3,
  null,
  null,
  null],
  8,
  2,
  "cbMobile",
  "valueChange",
  4,
  null,
  [
  9,
  2,
  "selected",
  "change",
  4,
  null,
  null,
  null],
  10,
  2,
  "cbVideo",
  "valueChange",
  5,
  null,
  [
  11,
  2,
  "selected",
  "change",
  5,
  null,
  null,
  null],
  12,
  2,
  "filter",
  "valueChange",
  6,
  null,
  [
  13,
  2,
  "count",
  "valueChange",
  6,
  null,
  null,
  null],
  14,
  2,
  "productList",
  "valueChange",
  9,
  null,
  [
  15,
  2,
  "maxItems",
  "valueChange",
  9,
  null,
  null,
  null],
  null];
  
