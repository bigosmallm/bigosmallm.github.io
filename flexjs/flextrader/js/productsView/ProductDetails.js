/**
 * Generated by Apache Flex Cross-Compiler from productsView\ProductDetails.mxml
 * productsView.ProductDetails
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes}
 */

goog.provide('productsView.ProductDetails');

goog.require('org.apache.flex.html.Container');
goog.require('productsView.ProductSupport');
goog.require('org.apache.flex.effects.Fade');
goog.require('org.apache.flex.html.ButtonBar');
goog.require('samples.flexstore.ProductThumbEvent');




/**
 * @constructor
 * @extends {org.apache.flex.html.Container}
 */
productsView.ProductDetails = function() {
  productsView.ProductDetails.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.binding.ContainerDataBinding}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.html.accessories.CurrencyFormatter}
   */
  this.cf_;
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.VContainer}
   */
  this.$ID19_;
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID11_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Container}
   */
  this.$ID18_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Image}
   */
  this.img_;
  
  /**
   * @private
   * @type {org.apache.flex.html.VContainer}
   */
  this.descr_;
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID12_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID13_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID14_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID15_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID16_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID17_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.descriptionText_;
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {productsView.ProductSupport}
   */
  this.$ID21_;
  
  /**
   * @private
   * @type {org.apache.flex.states.Transition}
   */
  this.$ID4_;
  
  /**
   * @private
   * @type {org.apache.flex.effects.Fade}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {org.apache.flex.html.ButtonBar}
   */
  this.tn_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Container}
   */
  this.$ID22_;
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID9_;
  
  /**
   * @private
   * @type {org.apache.flex.html.VContainer}
   */
  this.$ID28_;
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID23_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.$ID24_;
  
  /**
   * @private
   * @type {org.apache.flex.html.ImageButton}
   */
  this.purchase_;
  
  /**
   * @private
   * @type {org.apache.flex.html.accessories.ToolTipBead}
   */
  this.$ID25_;
  
  /**
   * @private
   * @type {org.apache.flex.html.ImageButton}
   */
  this.compare_;
  
  /**
   * @private
   * @type {org.apache.flex.html.accessories.ToolTipBead}
   */
  this.$ID26_;
  
  /**
   * @private
   * @type {org.apache.flex.html.ImageButton}
   */
  this.tiles_;
  
  /**
   * @private
   * @type {org.apache.flex.html.accessories.ToolTipBead}
   */
  this.$ID27_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  /**
   * @export
   * @type {Array}
   */
  this.mxmlsd = [
  [org.apache.flex.html.VContainer, 2, '_id', true, '$ID19', 'style', false, [org.apache.flex.core.SimpleCSSStyles, 5, '_id', true, '$ID11', 'left', true, 8, 'top', true, 8, 'right', true, 8, 'bottom', true, 8, 0, 0, null], 0, 0, [org.apache.flex.html.Container, 2, '_id', true, '$ID18', 'style', true, 'left:0px;right:0px', 0, 0, [org.apache.flex.html.Image, 3, 'id', true, 'img', 'width', true, 101, 'height', true, 101, 0, 0, null, org.apache.flex.html.VContainer, 2, 'id', true, 'descr', 'style', false, [org.apache.flex.core.SimpleCSSStyles, 5, '_id', true, '$ID12', 'top', true, 0, 'left', true, 105, 'right', true, 0, 'bottom', true, 20, 0, 0, null], 0, 0, [org.apache.flex.html.Label, 2, '_id', true, '$ID13', 'style', true, 'fontSize:11;fontWeight:\'bold\'', 0, 0, null, org.apache.flex.html.Label, 3, '_id', true, '$ID14', 'width', true, 80, 'height', true, 48, 0, 0, null, org.apache.flex.html.Label, 2, '_id', true, '$ID15', 'style', true, 'color:#EE8D0C', 0, 0, null, org.apache.flex.html.Label, 2, '_id', true, '$ID16', 'style', true, 'color:#EE8D0C', 0, 0, null, org.apache.flex.html.Label, 2, '_id', true, '$ID17', 'style', true, 'fontWeight:\'bold\'', 0, 0, null]], org.apache.flex.html.Label, 2, 'id', true, 'descriptionText', 'style', true, 'left:0px;right:0px;bottom:0px', 0, 0, null]],
[productsView.ProductSupport, 3, '_id', true, '$ID21', 'percentWidth', true, 100.0, 'percentHeight', true, 100.0, 0, 0, null],
null];
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([3,
'states',
null, [org.apache.flex.states.State, 3, '_id', true, '$ID1', 'name', true, 'Features', 'overrides', null, [org.apache.flex.states.AddItems, 4, 'itemsDescriptorIndex', true, 0, 'destination', true, '$ID22', 'propertyName', true, 'mxmlContent', 'position', true, 'first', 0, 0, null], 0, 0, null, org.apache.flex.states.State, 3, '_id', true, '$ID2', 'name', true, 'Support', 'overrides', null, [org.apache.flex.states.AddItems, 4, 'itemsDescriptorIndex', true, 1, 'destination', true, '$ID22', 'propertyName', true, 'mxmlContent', 'position', true, 'first', 0, 0, null], 0, 0, null],
'transitions',
null, [org.apache.flex.states.Transition, 2, '_id', true, '$ID4', 'effects', null, [org.apache.flex.effects.Fade, 1, '_id', true, '$ID3', 0, 0, null], 0, 0, null],
'beads',
null, [org.apache.flex.binding.ContainerDataBinding, 1, '_id', true, '$ID0', 0, 0, null],
0,
0
  ]);
  
};
goog.inherits(productsView.ProductDetails, org.apache.flex.html.Container);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
productsView.ProductDetails.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ProductDetails', qName: 'productsView.ProductDetails' }] };


/**
 * @private
 * @type {samples.flexstore.Product}
 */
productsView.ProductDetails.prototype._product;


;


;





Object.defineProperties(productsView.ProductDetails.prototype, /** @lends {productsView.ProductDetails.prototype} */ {
/** @export */
product: {
get: /** @this {productsView.ProductDetails} */ function() {
  return this._product;
},
set: /** @this {productsView.ProductDetails} */ function(p) {
  this._product = p;
  this.tn.selectedIndex = 0;
}}}
);/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductDetails.prototype.$EH0 = function(event)
{
  this.currentState = org.apache.flex.utils.Language.as(this.tn.selectedItem, String);
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductDetails.prototype.$EH1 = function(event)
{
  this.dispatchEvent(new samples.flexstore.ProductThumbEvent(samples.flexstore.ProductThumbEvent.PURCHASE, this.product));
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductDetails.prototype.$EH2 = function(event)
{
  this.dispatchEvent(new samples.flexstore.ProductThumbEvent(samples.flexstore.ProductThumbEvent.COMPARE, this.product));
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductDetails.prototype.$EH3 = function(event)
{
  this.dispatchEvent(new samples.flexstore.ProductThumbEvent(samples.flexstore.ProductThumbEvent.BROWSE, this.product));
};


Object.defineProperties(productsView.ProductDetails.prototype, /** @lends {productsView.ProductDetails.prototype} */ {
/** @export */
    cf: {
    /** @this {productsView.ProductDetails} */
    get: function() {
      return this.cf_;
    },
    /** @this {productsView.ProductDetails} */
    set: function(value) {
      if (value != this.cf_) {
        this.cf_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'cf', null, value));
      }
    }
  },
  /** @export */
    img: {
    /** @this {productsView.ProductDetails} */
    get: function() {
      return this.img_;
    },
    /** @this {productsView.ProductDetails} */
    set: function(value) {
      if (value != this.img_) {
        this.img_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'img', null, value));
      }
    }
  },
  /** @export */
    descr: {
    /** @this {productsView.ProductDetails} */
    get: function() {
      return this.descr_;
    },
    /** @this {productsView.ProductDetails} */
    set: function(value) {
      if (value != this.descr_) {
        this.descr_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'descr', null, value));
      }
    }
  },
  /** @export */
    descriptionText: {
    /** @this {productsView.ProductDetails} */
    get: function() {
      return this.descriptionText_;
    },
    /** @this {productsView.ProductDetails} */
    set: function(value) {
      if (value != this.descriptionText_) {
        this.descriptionText_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'descriptionText', null, value));
      }
    }
  },
  /** @export */
    tn: {
    /** @this {productsView.ProductDetails} */
    get: function() {
      return this.tn_;
    },
    /** @this {productsView.ProductDetails} */
    set: function(value) {
      if (value != this.tn_) {
        this.tn_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'tn', null, value));
      }
    }
  },
  /** @export */
    purchase: {
    /** @this {productsView.ProductDetails} */
    get: function() {
      return this.purchase_;
    },
    /** @this {productsView.ProductDetails} */
    set: function(value) {
      if (value != this.purchase_) {
        this.purchase_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'purchase', null, value));
      }
    }
  },
  /** @export */
    compare: {
    /** @this {productsView.ProductDetails} */
    get: function() {
      return this.compare_;
    },
    /** @this {productsView.ProductDetails} */
    set: function(value) {
      if (value != this.compare_) {
        this.compare_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'compare', null, value));
      }
    }
  },
  /** @export */
    tiles: {
    /** @this {productsView.ProductDetails} */
    get: function() {
      return this.tiles_;
    },
    /** @this {productsView.ProductDetails} */
    set: function(value) {
      if (value != this.tiles_) {
        this.tiles_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'tiles', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {productsView.ProductDetails} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = org.apache.flex.utils.Language.superGetter(productsView.ProductDetails,this, 'MXMLDescriptor');
          /** @type {Array} */
          var data = [
      org.apache.flex.html.accessories.CurrencyFormatter,
3,
'id',
true,
'cf',
'currencySymbol',
true,
'$',
'fractionalDigits',
true,
2,
0,
0,
null,
org.apache.flex.html.ButtonBar,
3,
'id',
true,
'tn',
'percentWidth',
true,
100.0,
'dataProvider',
true,
['Features','Support'],
0,
1,
'change',
this.$EH0,
null,
org.apache.flex.html.Container,
2,
'_id',
true,
'$ID22',
'style',
false,
[org.apache.flex.core.SimpleCSSStyles, 5, '_id', true, '$ID9', 'left', true, 4, 'right', true, 8, 'top', true, 34, 'bottom', true, 4, 0, 0, null],
0,
0,
[],
org.apache.flex.html.VContainer,
2,
'_id',
true,
'$ID28',
'style',
false,
[org.apache.flex.core.SimpleCSSStyles, 4, '_id', true, '$ID23', 'marginTop', true, 4, 'right', true, 16, 'top', true, 36, 0, 0, null],
0,
0,
[org.apache.flex.html.Spacer, 2, '_id', true, '$ID24', 'percentWidth', true, 100.0, 0, 0, null, org.apache.flex.html.ImageButton, 4, 'id', true, 'purchase', 'backgroundImage', true, 'assets/button_cart_empty.png', 'width', true, 30, 'beads', null, [org.apache.flex.html.accessories.ToolTipBead, 2, '_id', true, '$ID25', 'toolTip', true, 'Add to cart', 0, 0, null], 0, 1, 'click', this.$EH1, null, org.apache.flex.html.ImageButton, 4, 'id', true, 'compare', 'backgroundImage', true, 'assets/button_compare.png', 'width', true, 30, 'beads', null, [org.apache.flex.html.accessories.ToolTipBead, 2, '_id', true, '$ID26', 'toolTip', true, 'Add to compare list', 0, 0, null], 0, 1, 'click', this.$EH2, null, org.apache.flex.html.ImageButton, 4, 'id', true, 'tiles', 'backgroundImage', true, 'assets/button_tiles.png', 'width', true, 30, 'beads', null, [org.apache.flex.html.accessories.ToolTipBead, 2, '_id', true, '$ID27', 'toolTip', true, 'Back to thumbnail view', 0, 0, null], 0, 1, 'click', this.$EH3, null]
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * @export
   */
  productsView.ProductDetails.prototype._bindings = [
  7,
  ["product", "image"],
  null,
  ["img", "source"],
  ["product", "name"],
  null,
  ["$ID13", "text"],
  ["product", "featureString"],
  null,
  ["$ID14", "text"],
  ["product", "highlight1"],
  null,
  ["$ID15", "text"],
  ["product", "highlight2"],
  null,
  ["$ID16", "text"],
  function() { return this.cf.format(this.product.price); },
  null,
  ["$ID17", "text"],
  ["product", "description"],
  null,
  ["descriptionText", "text"],
  0,
  2,
  "product",
  "valueChange",
  [0,1,2,3,4,5,6],
  null,
  [
  1,
  2,
  "image",
  "valueChange",
  0,
  null,
  null,
  2,
  2,
  "name",
  "valueChange",
  1,
  null,
  null,
  3,
  2,
  "featureString",
  "propertyChange",
  2,
  null,
  null,
  4,
  2,
  "highlight1",
  "valueChange",
  3,
  null,
  null,
  5,
  2,
  "highlight2",
  "valueChange",
  4,
  null,
  null,
  6,
  2,
  "price",
  "valueChange",
  5,
  null,
  null,
  7,
  2,
  "description",
  "valueChange",
  6,
  null,
  null,
  null],
  8,
  2,
  "cf",
  "valueChange",
  5,
  null,
  null,
  null];
  
