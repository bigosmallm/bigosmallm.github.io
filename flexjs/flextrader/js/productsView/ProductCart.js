/**
 * Generated by Apache Flex Cross-Compiler from productsView\ProductCart.mxml
 * productsView.ProductCart
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes}
 */

goog.provide('productsView.ProductCart');

goog.require('org.apache.flex.html.Container');
goog.require('org.apache.flex.html.beads.layouts.VerticalColumnLayout');




/**
 * @constructor
 * @extends {org.apache.flex.html.Container}
 */
productsView.ProductCart = function() {
  productsView.ProductCart.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.core.SimpleCSSStyles}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.binding.ContainerDataBinding}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.beads.layouts.OneFlexibleChildVerticalLayout}
   */
  this.flexLayout_;
  
  /**
   * @private
   * @type {org.apache.flex.html.accessories.CurrencyFormatter}
   */
  this.cf_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {productsView.ProductList}
   */
  this.productList_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Container}
   */
  this.totalContainer_;
  
  /**
   * @private
   * @type {org.apache.flex.html.beads.layouts.VerticalColumnLayout}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID4_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.lblTotal_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID5_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.lblFee_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.$ID6_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.lblGrandTotal_;
  
  /**
   * @private
   * @type {org.apache.flex.html.TextButton}
   */
  this.$ID7_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([2,
'style',
false,
[org.apache.flex.core.SimpleCSSStyles, 5, '_id', true, '$ID0', 'paddingTop', true, 8, 'paddingBottom', true, 8, 'paddingRight', true, 4, 'paddingLeft', true, 4, 0, 0, null],
'beads',
null, [org.apache.flex.binding.ContainerDataBinding, 1, '_id', true, '$ID1', 0, 0, null, org.apache.flex.html.beads.layouts.OneFlexibleChildVerticalLayout, 2, 'id', true, 'flexLayout', 'flexibleChild', true, 'productList', 0, 0, null],
0,
0
  ]);
  
};
goog.inherits(productsView.ProductCart, org.apache.flex.html.Container);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
productsView.ProductCart.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ProductCart', qName: 'productsView.ProductCart' }] };


/**
 * @export
 * @type {number}
 */
productsView.ProductCart.prototype.numProducts_ = 0;


/**
 * @private
 * @type {number}
 */
productsView.ProductCart.prototype.total_ = 0;


/**
 * @private
 * @const
 * @type {number}
 */
productsView.ProductCart.prototype.SHIPPING = 1.99;


/**
 * @private
 * @param {samples.flexstore.ProductListEvent} event
 */
productsView.ProductCart.prototype.productListEventHandler = function(event) {
  switch (event.type) {
    case samples.flexstore.ProductListEvent.ADD_PRODUCT:
      event.product.qty = 0;
    case samples.flexstore.ProductListEvent.DUPLICATE_PRODUCT:
      event.product.qty++;
      this.total = this.total + event.product.price;
      this.numProducts++;
      break;
    case samples.flexstore.ProductListEvent.PRODUCT_QTY_CHANGE:
    
    case samples.flexstore.ProductListEvent.REMOVE_PRODUCT:
      var /** @type {Array} */ items = this.productList.items;
      this.total = 0;
      this.numProducts = 0;
      for (var /** @type {number} */ i = 0; i < items.length; i++) {
        var /** @type {samples.flexstore.Product} */ product = items[i].product;
        this.total = this.total + product.qty * product.price;
        this.numProducts = this.numProducts + product.qty;
      }
      break;
    default:
      break;
  }
};


Object.defineProperties(productsView.ProductCart.prototype, /** @lends {productsView.ProductCart.prototype} */ {
/** @export */
numProducts: {
/** @this {productsView.ProductCart} */
  get: function() {
  return this.numProducts_;
  },

/** @this {productsView.ProductCart} */
set: function(value) {
if (value != this.numProducts_) {
    var oldValue = this.numProducts_;
    this.numProducts_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "numProducts", oldValue, value));
}
}},/** @export */
total: {
/** @this {productsView.ProductCart} */
  get: function() {
  return this.total_;
  },

/** @this {productsView.ProductCart} */
set: function(value) {
if (value != this.total_) {
    var oldValue = this.total_;
    this.total_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "total", oldValue, value));
}
}}}
);/**
 * @export
 * @param {samples.flexstore.ProductListEvent} event
 */
productsView.ProductCart.prototype.$EH0 = function(event)
{
  this.productListEventHandler(event);
};


/**
 * @export
 * @param {samples.flexstore.ProductListEvent} event
 */
productsView.ProductCart.prototype.$EH1 = function(event)
{
  this.productListEventHandler(event);
};


/**
 * @export
 * @param {samples.flexstore.ProductListEvent} event
 */
productsView.ProductCart.prototype.$EH2 = function(event)
{
  this.productListEventHandler(event);
};


/**
 * @export
 * @param {samples.flexstore.ProductListEvent} event
 */
productsView.ProductCart.prototype.$EH3 = function(event)
{
  this.productListEventHandler(event);
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductCart.prototype.$EH4 = function(event)
{
  org.apache.flex.html.SimpleAlert.show('This feature is not implemented in this sample', 'Submit Order');
};


Object.defineProperties(productsView.ProductCart.prototype, /** @lends {productsView.ProductCart.prototype} */ {
/** @export */
    flexLayout: {
    /** @this {productsView.ProductCart} */
    get: function() {
      return this.flexLayout_;
    },
    /** @this {productsView.ProductCart} */
    set: function(value) {
      if (value != this.flexLayout_) {
        this.flexLayout_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'flexLayout', null, value));
      }
    }
  },
  /** @export */
    cf: {
    /** @this {productsView.ProductCart} */
    get: function() {
      return this.cf_;
    },
    /** @this {productsView.ProductCart} */
    set: function(value) {
      if (value != this.cf_) {
        this.cf_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'cf', null, value));
      }
    }
  },
  /** @export */
    productList: {
    /** @this {productsView.ProductCart} */
    get: function() {
      return this.productList_;
    },
    /** @this {productsView.ProductCart} */
    set: function(value) {
      if (value != this.productList_) {
        this.productList_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'productList', null, value));
      }
    }
  },
  /** @export */
    totalContainer: {
    /** @this {productsView.ProductCart} */
    get: function() {
      return this.totalContainer_;
    },
    /** @this {productsView.ProductCart} */
    set: function(value) {
      if (value != this.totalContainer_) {
        this.totalContainer_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'totalContainer', null, value));
      }
    }
  },
  /** @export */
    lblTotal: {
    /** @this {productsView.ProductCart} */
    get: function() {
      return this.lblTotal_;
    },
    /** @this {productsView.ProductCart} */
    set: function(value) {
      if (value != this.lblTotal_) {
        this.lblTotal_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'lblTotal', null, value));
      }
    }
  },
  /** @export */
    lblFee: {
    /** @this {productsView.ProductCart} */
    get: function() {
      return this.lblFee_;
    },
    /** @this {productsView.ProductCart} */
    set: function(value) {
      if (value != this.lblFee_) {
        this.lblFee_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'lblFee', null, value));
      }
    }
  },
  /** @export */
    lblGrandTotal: {
    /** @this {productsView.ProductCart} */
    get: function() {
      return this.lblGrandTotal_;
    },
    /** @this {productsView.ProductCart} */
    set: function(value) {
      if (value != this.lblGrandTotal_) {
        this.lblGrandTotal_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'lblGrandTotal', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {productsView.ProductCart} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = org.apache.flex.utils.Language.superGetter(productsView.ProductCart,this, 'MXMLDescriptor');
          /** @type {Array} */
          var data = [
      org.apache.flex.html.accessories.CurrencyFormatter,
3,
'id',
true,
'cf',
'currencySymbol',
true,
'$',
'fractionalDigits',
true,
2,
0,
0,
null,
org.apache.flex.html.Label,
4,
'_id',
true,
'$ID2',
'percentWidth',
true,
100.0,
'text',
true,
'Your Shopping Cart',
'className',
true,
'sectionHeader',
0,
0,
null,
productsView.ProductList,
5,
'id',
true,
'productList',
'percentWidth',
true,
100.0,
'newItemStartX',
true,
-100,
'newItemStartY',
true,
-100,
'showQuantity',
true,
true,
0,
4,
'addProduct',
this.$EH0,
'duplicateProduct',
this.$EH1,
'productQtyChange',
this.$EH2,
'removeProduct',
this.$EH3,
null,
org.apache.flex.html.Container,
3,
'id',
true,
'totalContainer',
'style',
true,
'right:0',
'beads',
null, [org.apache.flex.html.beads.layouts.VerticalColumnLayout, 2, '_id', true, '$ID3', 'numColumns', true, 2, 0, 0, null],
0,
0,
[org.apache.flex.html.Label, 2, '_id', true, '$ID4', 'text', true, 'Total:', 0, 0, null, org.apache.flex.html.Label, 3, 'id', true, 'lblTotal', 'width', true, 70, 'style', true, 'textAlign:\'right\'', 0, 0, null, org.apache.flex.html.Label, 2, '_id', true, '$ID5', 'text', true, 'Service Fee:', 0, 0, null, org.apache.flex.html.Label, 3, 'id', true, 'lblFee', 'width', true, 70, 'style', true, 'textAlign:\'right\'', 0, 0, null, org.apache.flex.html.Label, 3, '_id', true, '$ID6', 'text', true, 'Grand Total:', 'style', true, 'fontWeight:\'bold\'', 0, 0, null, org.apache.flex.html.Label, 3, 'id', true, 'lblGrandTotal', 'width', true, 70, 'style', true, 'textAlign:\'right\'', 0, 0, null],
org.apache.flex.html.TextButton,
3,
'_id',
true,
'$ID7',
'text',
true,
'Submit Order',
'style',
true,
'right:0',
0,
1,
'click',
this.$EH4,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * @export
   */
  productsView.ProductCart.prototype._bindings = [
  3,
  function() { return this.cf.format(this.total); },
  null,
  ["lblTotal", "text"],
  function() { return this.cf.format(this.numProducts * this.SHIPPING); },
  null,
  ["lblFee", "text"],
  function() { return this.cf.format(this.total + (this.numProducts * this.SHIPPING)); },
  null,
  ["lblGrandTotal", "text"],
  0,
  2,
  "cf",
  "valueChange",
  [0,1,2],
  null,
  null,
  1,
  2,
  "total",
  "valueChange",
  [0,2],
  null,
  null,
  2,
  2,
  "numProducts",
  "valueChange",
  [1,2],
  null,
  null,
  null];
  
