/**
 * Generated by Apache Flex Cross-Compiler from productsView\ProductCatalogPanelTitleBarView.mxml
 * productsView.ProductCatalogPanelTitleBarView
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes}
 */

goog.provide('productsView.ProductCatalogPanelTitleBarView');

goog.require('org.apache.flex.html.MXMLBeadViewBase');
goog.require('productsView.CatalogTitleButtons');




/**
 * @constructor
 * @extends {org.apache.flex.html.MXMLBeadViewBase}
 */
productsView.ProductCatalogPanelTitleBarView = function() {
  productsView.ProductCatalogPanelTitleBarView.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.binding.MXMLBeadViewBaseDataBinding}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.core.ParentDocumentBead}
   */
  this.pdb_;
  
  /**
   * @private
   * @type {org.apache.flex.html.beads.layouts.LayoutChangeNotifier}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Label}
   */
  this.titleLabel_;
  
  /**
   * @private
   * @type {org.apache.flex.html.CloseButton}
   */
  this.closeButton_;
  
  /**
   * @private
   * @type {productsView.CatalogTitleButtons}
   */
  this.buttons_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([1,
'beads',
null, [org.apache.flex.binding.MXMLBeadViewBaseDataBinding, 1, '_id', true, '$ID0', 0, 0, null, org.apache.flex.core.ParentDocumentBead, 1, 'id', true, 'pdb', 0, 0, null, org.apache.flex.html.beads.layouts.LayoutChangeNotifier, 1, '_id', true, '$ID1', 0, 0, null],
0,
0
  ]);
  
};
goog.inherits(productsView.ProductCatalogPanelTitleBarView, org.apache.flex.html.MXMLBeadViewBase);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
productsView.ProductCatalogPanelTitleBarView.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ProductCatalogPanelTitleBarView', qName: 'productsView.ProductCatalogPanelTitleBarView' }] };


/**
 * @private
 */
productsView.ProductCatalogPanelTitleBarView.prototype.clickHandler = function() {
  var /** @type {org.apache.flex.events.Event} */ newEvent = new org.apache.flex.events.Event('close', true);
  org.apache.flex.utils.Language.as(this._strand, org.apache.flex.core.UIBase, true).dispatchEvent(newEvent);
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
productsView.ProductCatalogPanelTitleBarView.prototype.$EH0 = function(event)
{
  this.clickHandler();
};


Object.defineProperties(productsView.ProductCatalogPanelTitleBarView.prototype, /** @lends {productsView.ProductCatalogPanelTitleBarView.prototype} */ {
/** @export */
    pdb: {
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    get: function() {
      return this.pdb_;
    },
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    set: function(value) {
      if (value != this.pdb_) {
        this.pdb_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'pdb', null, value));
      }
    }
  },
  /** @export */
    titleLabel: {
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    get: function() {
      return this.titleLabel_;
    },
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    set: function(value) {
      if (value != this.titleLabel_) {
        this.titleLabel_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'titleLabel', null, value));
      }
    }
  },
  /** @export */
    closeButton: {
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    get: function() {
      return this.closeButton_;
    },
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    set: function(value) {
      if (value != this.closeButton_) {
        this.closeButton_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'closeButton', null, value));
      }
    }
  },
  /** @export */
    buttons: {
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    get: function() {
      return this.buttons_;
    },
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    set: function(value) {
      if (value != this.buttons_) {
        this.buttons_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'buttons', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {productsView.ProductCatalogPanelTitleBarView} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = org.apache.flex.utils.Language.superGetter(productsView.ProductCatalogPanelTitleBarView,this, 'MXMLDescriptor');
          /** @type {Array} */
          var data = [
      org.apache.flex.html.Label,
1,
'id',
true,
'titleLabel',
0,
0,
null,
org.apache.flex.html.CloseButton,
1,
'id',
true,
'closeButton',
0,
1,
'click',
this.$EH0,
null,
productsView.CatalogTitleButtons,
1,
'id',
true,
'buttons',
0,
0,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * @export
   */
  productsView.ProductCatalogPanelTitleBarView.prototype._bindings = [
  3,
  ["buttons", "width"],
  null,
  ["$ID1", "watchedProperty"],
  ["model", "title"],
  null,
  ["titleLabel", "text"],
  ["model", "showCloseButton"],
  null,
  ["closeButton", "visible"],
  0,
  2,
  "buttons",
  "valueChange",
  0,
  null,
  [
  1,
  2,
  "width",
  "widthChanged",
  0,
  null,
  null,
  null],
  2,
  2,
  "model",
  "__NoChangeEvent__",
  [1,2],
  null,
  [
  3,
  2,
  "title",
  "titleChange",
  1,
  null,
  null,
  4,
  2,
  "showCloseButton",
  "showCloseButtonChange",
  2,
  null,
  null,
  null],
  null];
  
