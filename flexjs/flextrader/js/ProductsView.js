/**
 * Generated by Apache Flex Cross-Compiler from ProductsView.mxml
 * ProductsView
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes}
 */

goog.provide('ProductsView');

goog.require('org.apache.flex.html.Container');
goog.require('org.apache.flex.html.beads.layouts.OneFlexibleChildHorizontalLayout');
goog.require('productsView.Grip');
goog.require('productsView.ProductFilterPanel');
goog.require('productsView.ProductCart');
goog.require('productsView.ProductCatalogPanel');
goog.require('org.apache.flex.effects.Move');
goog.require('org.apache.flex.events.MouseEvent');
goog.require('samples.flexstore.ProductFilterEvent');
goog.require('samples.flexstore.ProductThumbEvent');




/**
 * @constructor
 * @extends {org.apache.flex.html.Container}
 */
ProductsView = function() {
  ProductsView.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.flex.binding.ContainerDataBinding}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Container}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {org.apache.flex.html.beads.layouts.OneFlexibleChildHorizontalLayout}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {productsView.Grip}
   */
  this.filterGrip_;
  
  /**
   * @private
   * @type {productsView.ProductFilterPanel}
   */
  this.filterPanel_;
  
  /**
   * @private
   * @type {org.apache.flex.html.Spacer}
   */
  this.spacer_;
  
  /**
   * @private
   * @type {productsView.ProductCart}
   */
  this.cartPanel_;
  
  /**
   * @private
   * @type {productsView.Grip}
   */
  this.cartGrip_;
  
  /**
   * @private
   * @type {productsView.ProductCatalogPanel}
   */
  this.catalogPanel_;
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {org.apache.flex.states.State}
   */
  this.$ID4_;
  
  /**
   * @private
   * @type {org.apache.flex.states.Transition}
   */
  this.$ID6_;
  
  /**
   * @private
   * @type {org.apache.flex.effects.Move}
   */
  this.$ID5_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;

  this.generateMXMLAttributes
  ([6,
'width',
true,
990,
'height',
true,
550,
'currentState',
true,
'showFilter',
'states',
null, [org.apache.flex.states.State, 3, '_id', true, '$ID3', 'name', true, 'showFilter', 'overrides', null, [org.apache.flex.states.SetProperty, 3, 'target', true, 'catalogPanel', 'name', true, 'x', 'value', true, 288, 0, 0, null], 0, 0, null, org.apache.flex.states.State, 3, '_id', true, '$ID4', 'name', true, 'showCart', 'overrides', null, [org.apache.flex.states.SetProperty, 3, 'target', true, 'catalogPanel', 'name', true, 'x', 'value', true, 0, 0, 0, null], 0, 0, null],
'transitions',
null, [org.apache.flex.states.Transition, 4, '_id', true, '$ID6', 'fromState', true, '*', 'toState', true, '*', 'effects', null, [org.apache.flex.effects.Move, 2, '_id', true, '$ID5', 'target', true, 'catalogPanel', 0, 0, null], 0, 0, null],
'beads',
null, [org.apache.flex.binding.ContainerDataBinding, 1, '_id', true, '$ID0', 0, 0, null],
0,
0
  ]);
  
};
goog.inherits(ProductsView, org.apache.flex.html.Container);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
ProductsView.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ProductsView', qName: 'ProductsView' }] };


/**
 * @private
 * @type {org.apache.flex.collections.LazyCollection}
 */
ProductsView.prototype._catalog;


;


;


/**
 * @export
 * @param {samples.flexstore.Product} product
 */
ProductsView.prototype.addToCompare = function(product) {
  this.currentState = 'showFilter';
  this.filterPanel.productList.addProduct(product);
};


/**
 * @export
 * @param {samples.flexstore.Product} product
 */
ProductsView.prototype.addToCart = function(product) {
  this.currentState = 'showCart';
  this.cartPanel.productList.addProduct(product);
};





Object.defineProperties(ProductsView.prototype, /** @lends {ProductsView.prototype} */ {
/** @export */
catalog: {
get: /** @this {ProductsView} */ function() {
  return this._catalog;
},
set: /** @this {ProductsView} */ function(c) {
  this._catalog = c;
  if (this.filterPanel != null) {
    this.filterPanel.filter.count = c.length;
  }
  this.dispatchEvent(new org.apache.flex.events.Event("catalogChange"));
}}}
);/**
 * @export
 * @param {org.apache.flex.events.MouseEvent} event
 */
ProductsView.prototype.$EH0 = function(event)
{
  this.currentState = 'showFilter';
};


/**
 * @export
 * @param {samples.flexstore.ProductFilterEvent} event
 */
ProductsView.prototype.$EH1 = function(event)
{
  this.catalogPanel.filter(event.filter, event.live);
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
ProductsView.prototype.$EH2 = function(event)
{
  this.catalogPanel.compare(this.filterPanel.productList.getProducts());
};


/**
 * @export
 * @param {org.apache.flex.events.Event} event
 */
ProductsView.prototype.$EH3 = function(event)
{
  if (this.catalog)
  this.filterPanel.filter.count = this.catalog.length;;
};


/**
 * @export
 * @param {org.apache.flex.events.MouseEvent} event
 */
ProductsView.prototype.$EH4 = function(event)
{
  this.currentState = 'showCart';
};


/**
 * @export
 * @param {samples.flexstore.ProductThumbEvent} event
 */
ProductsView.prototype.$EH5 = function(event)
{
  this.addToCompare(event.product);
};


/**
 * @export
 * @param {samples.flexstore.ProductThumbEvent} event
 */
ProductsView.prototype.$EH6 = function(event)
{
  this.addToCart(event.product);
};


Object.defineProperties(ProductsView.prototype, /** @lends {ProductsView.prototype} */ {
/** @export */
    filterGrip: {
    /** @this {ProductsView} */
    get: function() {
      return this.filterGrip_;
    },
    /** @this {ProductsView} */
    set: function(value) {
      if (value != this.filterGrip_) {
        this.filterGrip_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'filterGrip', null, value));
      }
    }
  },
  /** @export */
    filterPanel: {
    /** @this {ProductsView} */
    get: function() {
      return this.filterPanel_;
    },
    /** @this {ProductsView} */
    set: function(value) {
      if (value != this.filterPanel_) {
        this.filterPanel_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'filterPanel', null, value));
      }
    }
  },
  /** @export */
    spacer: {
    /** @this {ProductsView} */
    get: function() {
      return this.spacer_;
    },
    /** @this {ProductsView} */
    set: function(value) {
      if (value != this.spacer_) {
        this.spacer_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'spacer', null, value));
      }
    }
  },
  /** @export */
    cartPanel: {
    /** @this {ProductsView} */
    get: function() {
      return this.cartPanel_;
    },
    /** @this {ProductsView} */
    set: function(value) {
      if (value != this.cartPanel_) {
        this.cartPanel_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'cartPanel', null, value));
      }
    }
  },
  /** @export */
    cartGrip: {
    /** @this {ProductsView} */
    get: function() {
      return this.cartGrip_;
    },
    /** @this {ProductsView} */
    set: function(value) {
      if (value != this.cartGrip_) {
        this.cartGrip_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'cartGrip', null, value));
      }
    }
  },
  /** @export */
    catalogPanel: {
    /** @this {ProductsView} */
    get: function() {
      return this.catalogPanel_;
    },
    /** @this {ProductsView} */
    set: function(value) {
      if (value != this.catalogPanel_) {
        this.catalogPanel_ = value;
        this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(this, 'catalogPanel', null, value));
      }
    }
  },
  'MXMLDescriptor': {
    /** @this {ProductsView} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = org.apache.flex.utils.Language.superGetter(ProductsView,this, 'MXMLDescriptor');
          /** @type {Array} */
          var data = [
      org.apache.flex.html.Container,
5,
'_id',
true,
'$ID2',
'className',
true,
'colorPanel',
'percentHeight',
true,
100.0,
'percentWidth',
true,
100.0,
'beads',
null, [org.apache.flex.html.beads.layouts.OneFlexibleChildHorizontalLayout, 2, '_id', true, '$ID1', 'flexibleChild', true, 'spacer', 0, 0, null],
0,
0,
[productsView.Grip, 3, 'id', true, 'filterGrip', 'gripIcon', true, 'assets/icon_magnifier.png', 'gripTip', true, 'Show filter panel', 0, 1, 'click', this.$EH0, null, productsView.ProductFilterPanel, 4, 'id', true, 'filterPanel', 'y', true, 0, 'width', true, 265, 'percentHeight', true, 100.0, 0, 3, 'filter', this.$EH1, 'compare', this.$EH2, 'initComplete', this.$EH3, null, org.apache.flex.html.Spacer, 1, 'id', true, 'spacer', 0, 0, null, productsView.ProductCart, 3, 'id', true, 'cartPanel', 'width', true, 265, 'percentHeight', true, 100.0, 0, 0, null, productsView.Grip, 3, 'id', true, 'cartGrip', 'gripIcon', true, 'assets/icon_cart_empty.png', 'gripTip', true, 'Show cart', 0, 1, 'click', this.$EH4, null],
productsView.ProductCatalogPanel,
4,
'id',
true,
'catalogPanel',
'y',
true,
4,
'width',
true,
685,
'height',
true,
540,
0,
2,
'compare',
this.$EH5,
'purchase',
this.$EH6,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * @export
   */
  ProductsView.prototype._bindings = [
  3,
  ["filterGrip", "width"],
  null,
  ["filterPanel", "x"],
  "catalog",
  null,
  ["catalogPanel", "catalog"],
  ["cartPanel", "numProducts"],
  null,
  ["catalogPanel", "cartCount"],
  0,
  2,
  "filterGrip",
  "valueChange",
  0,
  null,
  [
  1,
  2,
  "width",
  "widthChanged",
  0,
  null,
  null,
  null],
  2,
  2,
  "catalog",
  "catalogChange",
  1,
  null,
  null,
  3,
  2,
  "cartPanel",
  "valueChange",
  2,
  null,
  [
  4,
  2,
  "numProducts",
  "valueChange",
  2,
  null,
  null,
  null],
  null];
  
