/**
 * Generated by Apache Flex Cross-Compiler from samples\flexstore\ProductFilter.as
 * samples.flexstore.ProductFilter
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes}
 */

goog.provide('samples.flexstore.ProductFilter');

goog.require('org.apache.flex.events.EventDispatcher');



/**
 * @constructor
 * @extends {org.apache.flex.events.EventDispatcher}
 */
samples.flexstore.ProductFilter = function() {
  samples.flexstore.ProductFilter.base(this, 'constructor');
};
goog.inherits(samples.flexstore.ProductFilter, org.apache.flex.events.EventDispatcher);


/**
 * @export
 * @type {number}
 */
samples.flexstore.ProductFilter.prototype.count_;


/**
 * @export
 * @type {string}
 */
samples.flexstore.ProductFilter.prototype.experience_;


/**
 * @export
 * @type {number}
 */
samples.flexstore.ProductFilter.prototype.minPrice_;


/**
 * @export
 * @type {number}
 */
samples.flexstore.ProductFilter.prototype.maxPrice_;


/**
 * @export
 * @type {boolean}
 */
samples.flexstore.ProductFilter.prototype.blazeds_;


/**
 * @export
 * @type {boolean}
 */
samples.flexstore.ProductFilter.prototype.mobile_;


/**
 * @export
 * @type {boolean}
 */
samples.flexstore.ProductFilter.prototype.video_;


/**
 * @export
 * @param {samples.flexstore.Product} product
 * @return {boolean}
 */
samples.flexstore.ProductFilter.prototype.accept = function(product) {
  if (this.minPrice > product.price || this.maxPrice < product.price)
    return false;
  if (this.experience != "All" && this.experience > product.experience)
    return false;
  if (this.blazeds && !product.blazeds)
    return false;
  if (this.mobile && !product.mobile)
    return false;
  if (this.video && !product.video)
    return false;
  return true;
};Object.defineProperties(samples.flexstore.ProductFilter.prototype, /** @lends {samples.flexstore.ProductFilter.prototype} */ {
/** @export */
count: {
/** @this {samples.flexstore.ProductFilter} */
  get: function() {
  return this.count_;
  },

/** @this {samples.flexstore.ProductFilter} */
set: function(value) {
if (value != this.count_) {
    var oldValue = this.count_;
    this.count_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "count", oldValue, value));
}
}},/** @export */
experience: {
/** @this {samples.flexstore.ProductFilter} */
  get: function() {
  return this.experience_;
  },

/** @this {samples.flexstore.ProductFilter} */
set: function(value) {
if (value != this.experience_) {
    var oldValue = this.experience_;
    this.experience_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "experience", oldValue, value));
}
}},/** @export */
minPrice: {
/** @this {samples.flexstore.ProductFilter} */
  get: function() {
  return this.minPrice_;
  },

/** @this {samples.flexstore.ProductFilter} */
set: function(value) {
if (value != this.minPrice_) {
    var oldValue = this.minPrice_;
    this.minPrice_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "minPrice", oldValue, value));
}
}},/** @export */
maxPrice: {
/** @this {samples.flexstore.ProductFilter} */
  get: function() {
  return this.maxPrice_;
  },

/** @this {samples.flexstore.ProductFilter} */
set: function(value) {
if (value != this.maxPrice_) {
    var oldValue = this.maxPrice_;
    this.maxPrice_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "maxPrice", oldValue, value));
}
}},/** @export */
blazeds: {
/** @this {samples.flexstore.ProductFilter} */
  get: function() {
  return this.blazeds_;
  },

/** @this {samples.flexstore.ProductFilter} */
set: function(value) {
if (value != this.blazeds_) {
    var oldValue = this.blazeds_;
    this.blazeds_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "blazeds", oldValue, value));
}
}},/** @export */
mobile: {
/** @this {samples.flexstore.ProductFilter} */
  get: function() {
  return this.mobile_;
  },

/** @this {samples.flexstore.ProductFilter} */
set: function(value) {
if (value != this.mobile_) {
    var oldValue = this.mobile_;
    this.mobile_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "mobile", oldValue, value));
}
}},/** @export */
video: {
/** @this {samples.flexstore.ProductFilter} */
  get: function() {
  return this.video_;
  },

/** @this {samples.flexstore.ProductFilter} */
set: function(value) {
if (value != this.video_) {
    var oldValue = this.video_;
    this.video_ = value;
    this.dispatchEvent(org.apache.flex.events.ValueChangeEvent.createUpdateEvent(
         this, "video", oldValue, value));
}
}}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
samples.flexstore.ProductFilter.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'ProductFilter', qName: 'samples.flexstore.ProductFilter'}] };
